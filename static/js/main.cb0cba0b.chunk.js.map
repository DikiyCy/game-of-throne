{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/housesPage.js","components/pages/booksPage.js","components/pages/booksItem.js","components/pages/startPages.js","components/pages/unknownPage.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","HeaderBlock","styled","div","HeaderTitle","h3","HeaderLinks","ul","Header","to","GotService","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getAllBooks","map","_transformBook","getBook","id","book","getAllCharacters","_transformCharacter","bind","getCharacter","character","getAllHouses","_transformHouse","getHouse","house","_extractId","item","match","name","isSet","region","words","titles","ancestralWeapons","numberOfPages","publisher","released","this","data","char","gender","born","died","culture","Spinner","className","ErrorMessage","src","img","alt","RandomCharDiv","RandomCharSpan","RandomChar","interval","gotService","useState","charUpdate","loading","loadingUpdate","error","errorUpdate","updateCharacter","Math","floor","random","then","catch","useEffect","timerId","setInterval","clearInterval","errorMessage","spinner","content","defaultProps","View","ItemListUl","ItemList","getData","onItemSelected","renderItem","itemList","updateList","items","label","key","onClick","ItemDetailsDiv","ErrorSpan","span","ItemDetailsTitle","h4","Field","field","ItemDetails","itemId","getItem","descr","children","newItemIUpdate","React","Children","child","cloneElement","RowBlock","left","right","Row","Col","md","CharacterPage","state","selectedChar","setState","itemDetails","Component","BooksPage","selectedHouse","houseDetails","props","history","push","withRouter","BooksPageDiv","BooksItem","bookId","StartPagesDiv","StartPages","UnknownPageDiv","UnknownPage","AppDiv","Button","button","App","showRandomChar","onToggleClass","randomChar","Container","lg","size","offset","path","exact","component","HousesPage","render","location","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cb0cba0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.22389cf4.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <Link to='/'>\n                Game of Thrones DB\n                </Link>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <Link to='/characters/'>Characters</Link>\n                </li>\n                <li>\n                    <Link to='/houses/'>Houses</Link>\n                </li>\n                <li>\n                    <Link to='/books/'>Books</Link>\n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;\n","import Header from './header';\n\nexport default Header;","export default class GotService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n          throw new Error(`Could not fetch ${url}` +\r\n            `, received ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllBooks = async () => {\r\n        const res = await this.getResource(`/books/`);\r\n        return res.map(this._transformBook);\r\n    }\r\n\r\n    getBook = async (id) =>  {\r\n        const book = await this.getResource(`/books/${id}/`);\r\n        return this._transformBook(book);\r\n    }\r\n\r\n    getAllCharacters = async () => {\r\n        const res = await this.getResource(`/characters?page=34&pageSize=10`);\r\n        return res.map(this._transformCharacter.bind(this));\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const character = await this.getResource(`/characters/${id}`);\r\n        return this._transformCharacter(character);\r\n    }\r\n\r\n    getAllHouses = async () => {\r\n        const res = await this.getResource(`/houses/`);\r\n        return res.map(this._transformHouse);\r\n    }\r\n\r\n    getHouse = async (id) => {\r\n        const house = await this.getResource(`/houses/${id}/`);\r\n        return this._transformHouse(house);\r\n    }\r\n    isSet(data) {\r\n        if (data && data[0] !== \"\") {\r\n            return data;\r\n        } else {\r\n            return 'no data :-(';\r\n        }\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)$/;\r\n        return item.url.match(idRegExp)[1];\r\n    }\r\n    _transformCharacter(char) {\r\n        return {\r\n            id: this._extractId(char),\r\n            name: this.isSet(char.name),\r\n            gender: this.isSet(char.gender),\r\n            born: this.isSet(char.born),\r\n            died: this.isSet(char.died),\r\n            culture: this.isSet(char.culture)\r\n        };\r\n    }\r\n\r\n    _transformHouse = (house) => {\r\n        return {\r\n            id: this._extractId(house),\r\n            name: this.isSet(house.name),\r\n            region: this.isSet(house.region),\r\n            words: this.isSet(house.words),\r\n            titles: this.isSet(house.titles),\r\n            ancestralWeapons: this.isSet(house.ancestralWeapons)\r\n        };\r\n    }\r\n\r\n    _transformBook = (book) => {\r\n        return {\r\n            id: this._extractId(book),\r\n            name: this.isSet(book.name),\r\n            numberOfPages: this.isSet(book.numberOfPages),\r\n            publisher: this.isSet(book.publisher),\r\n            released: this.isSet(book.released)\r\n        };\r\n    }\r\n}\r\n","import Spinner from './spinner';\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport './error.css';\r\nimport img from './error.jpg';\r\n\r\nconst ErrorMessage  = () => {\r\n    return (\r\n        <div className=\"eror-block\">\r\n            <img src={img} alt=\"error\"></img>\r\n            <span>Somethin goes wrong</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport GotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage';\n\nconst RandomCharDiv = styled.div`\n        background-color: #fff;\n        padding: 25px 25px 15px 25px;\n        margin-bottom: 40px;\n        h4 {\n            margin-bottom: 20px;\n            text-align: center;\n        }\n`;\n\nconst RandomCharSpan = styled.div`\n    font-weight: bold;\n`;\n\nfunction RandomChar({interval}) {\n    const gotService = new GotService();\n\n    const [char, charUpdate] = useState([]);\n    const [loading, loadingUpdate] = useState(true);\n    const [error, errorUpdate] = useState(false)\n\n    function updateCharacter() {\n        const id = Math.floor(Math.random()*1140 + 25);\n        gotService.getCharacter(id)\n            .then((char) => {\n                charUpdate(char);\n                loadingUpdate(false);\n            })\n            .catch(() => {\n                errorUpdate(true);\n                loadingUpdate(false);\n            });\n    }\n\n    useEffect(() => {\n        updateCharacter();\n        let timerId = setInterval(() => updateCharacter(), interval);\n        return () => {\n            clearInterval(timerId);\n        }\n    }, [])\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null\n    return (\n        <RandomCharDiv className=\"random-block rounded\">\n            {errorMessage}\n            {spinner}\n            {content}\n        </RandomCharDiv>\n    );\n}\n\nRandomChar.defaultProps = {\n    interval: 15000\n}\n\nRandomChar.propTypes = {\n    interval: PropTypes.number,\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <RandomCharSpan>Gender </RandomCharSpan>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <RandomCharSpan>Born </RandomCharSpan>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <RandomCharSpan>Died </RandomCharSpan>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <RandomCharSpan>Culture </RandomCharSpan>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}\n\nexport default RandomChar;\n","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner';\n\nconst ItemListUl = styled.ul`\n    padding: 0;\n    max-width: 540px;\n    border-radius: 5px;\n    .list-group-item {\n        cursor: pointer;\n    }\n`;\n\nfunction ItemList({getData, onItemSelected, renderItem}) {\n    const [itemList, updateList] = useState([]);\n\n    useEffect(() => {\n        getData()\n            .then((data) => {\n                updateList(data)\n            })\n    }, [])\n\n    function renderItems(arr) {\n        return arr.map((item) => {\n            const {id} = item;\n            const label = renderItem(item);\n            return (\n                <li\n                    className=\"list-group-item\"\n                    key={id}\n                    onClick={() => {\n                        onItemSelected(id);\n                    }}\n                >\n                    {label}\n                </li>\n            )\n        })\n    }\n\n    if(!itemList) {\n        return <Spinner />\n    }\n\n    const items = renderItems(itemList);\n\n    return (\n        <ItemListUl>\n            {items}\n        </ItemListUl>\n    );\n}\n\nItemList.defaultProps = {\n    onItemSelected: () => {},\n}\n\nItemList.propTypes = {\n    onItemSelected: PropTypes.func,\n}\n\nexport default ItemList;\n","import ItemList from './itemList';\n\nexport default ItemList;","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\n\nconst ItemDetailsDiv = styled.div`\n        background-color: #fff;\n        padding: 25px 25px 15px 25px;\n        margin-bottom: 40px;\n        max-width: 540px;\n        h4 {\n            margin-bottom: 20px;\n            text-align: center;\n        }\n        .select-error {\n            color: #fff;\n            text-align: center;\n            font-size: 26px;\n        }\n`;\nconst ErrorSpan = styled.span`\n    color: #fff;\n    text-align: center;\n    font-size: 26px;\n`;\nconst ItemDetailsTitle = styled.h4`\n    margin-bottom: 20px;\n    text-align: center;\n`;\n\nconst Field = ({item, field, label}) => {\n    return (\n        <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}\n\nexport {\n    Field\n}\n\nfunction ItemDetails({itemId, getItem, descr, children}) {\n\n    const [item, newItemIUpdate] = useState(null);\n\n    function updateItem() {\n        if (!itemId) return;\n\n        getItem(itemId)\n            .then((data) => {\n                newItemIUpdate(data)\n            })\n    }\n    useEffect(() => {\n        updateItem();\n    }, [itemId])\n\n    if (!item) {\n        return <ErrorSpan className=\"select-error\">\n            Please, select a {descr}\n        </ErrorSpan>\n    }\n    const {name} = item;\n    return (\n        <ItemDetailsDiv className=\"char-details rounded\">\n            <ItemDetailsTitle>{name}</ItemDetailsTitle>\n            <ul className=\"list-group list-group-flush\">\n                {\n                    React.Children.map(children, (child) => {\n                        return React.cloneElement(child, {item})\n                    })\n                }\n            </ul>\n        </ItemDetailsDiv>\n    );\n}\n\nexport default ItemDetails;\n","import ItemDetails, {Field} from './itemDetails';\nexport default ItemDetails;\nexport {\n    Field\n}\n","import RowBlock from './rowBlock';\r\nexport default RowBlock;\r\n","import React from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\n\r\n\r\n\r\nconst RowBlock = ({left, right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md='6'>\r\n                {left}\r\n            </Col>\r\n            <Col md='6'>\r\n                {right}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RowBlock;\r\n","import React, {Component} from 'react';\r\nimport GotService from '../../services/gotService';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class CharacterPage extends Component {\r\n    gotService = new GotService();\r\n\r\n    state = {\r\n        selectedChar: null,\r\n        error: false\r\n    }\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id,\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n        if (error ) {\r\n            return <ErrorMessage />\r\n        }\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllCharacters}\r\n                renderItem={({name, gender}) => `${name} (${gender})`}\r\n            />\r\n        )\r\n        const itemDetails = (\r\n            <ItemDetails\r\n                itemId={this.state.selectedChar}\r\n                getItem={this.gotService.getCharacter}\r\n                descr={'character'}\r\n            >\r\n                <Field field='gender' label='Gender'/>\r\n                <Field field='born' label='Born'/>\r\n                <Field field='died' label='Died'/>\r\n                <Field field='culture' label='Culture'/>\r\n            </ItemDetails>\r\n        )\r\n        return (\r\n            <RowBlock left={itemList} right={itemDetails}/>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport GotService from '../../services/gotService';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport RowBlock from '../rowBlock';\r\n\r\n\r\nexport default class BooksPage extends Component {\r\n    gotService = new GotService();\r\n\r\n    state = {\r\n        selectedHouse: null,\r\n        error: false\r\n    }\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id,\r\n        })\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllHouses}\r\n                renderItem={({name, region}) => `${name} (${region})`}\r\n            />\r\n        )\r\n        const houseDetails = (\r\n            <ItemDetails\r\n                itemId={this.state.selectedHouse}\r\n                getItem={this.gotService.getHouse}\r\n                descr={'house'}\r\n            >\r\n                <Field field='region' label='Region'/>\r\n                <Field field='words' label='Words'/>\r\n                <Field field='titles' label='Titles'/>\r\n                <Field field='ancestralWeapons' label='Ancestral weapons'/>\r\n            </ItemDetails>\r\n        )\r\n        return (\r\n            <RowBlock left={itemList} right={houseDetails}/>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport GotService from '../../services/gotService';\r\nimport ItemList from '../itemList';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\n\r\nclass BooksPage extends Component {\r\n    gotService = new GotService();\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return (\r\n            <ItemList\r\n                onItemSelected={(itemId) => {\r\n                    this.props.history.push(itemId);\r\n                }}\r\n                getData={this.gotService.getAllBooks}\r\n                renderItem={({name, publisher}) => `${name} (${publisher})`}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport GotService from '../../services/gotService';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport styled from 'styled-components';\r\n\r\nconst BooksPageDiv = styled.div`\r\n    background-color: red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: url('https://static.tildacdn.com/tild3433-3262-4633-a165-336235613335/shapeimage_5.png') center center/contain no-repeat;\r\n    height: 380px;\r\n    div {\r\n        min-width: 540px;\r\n        max-height: 250px;\r\n        background-color: rgba(0, 0, 0, 0);\r\n        li {\r\n            background-color: rgba(0, 0, 0, 0);\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default  class BooksItem extends Component {\r\n    gotService = new GotService();\r\n    render() {\r\n        return (\r\n            <BooksPageDiv>\r\n                <ItemDetails\r\n                    itemId={this.props.bookId}\r\n                    getItem={this.gotService.getBook}\r\n                    descr={'book'}\r\n                >\r\n                    <Field field='numberOfPages' label='Number of pages'/>\r\n                    <Field field='publisher' label='Publisher'/>\r\n                    <Field field='released' label='Released'/>\r\n                </ItemDetails>\r\n                    <Link to=\"/books/\">&#10229; Back to the list of books</Link>\r\n            </BooksPageDiv>\r\n        )\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst StartPagesDiv = styled.div`\r\n    color: #000;\r\n    background-color: #fff;\r\n    padding: 25px 25px;\r\n    border-radius: 5px;\r\n    max-width: 540px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    h1 {\r\n        font-size: 30px;\r\n    }\r\n    hr {\r\n        width: calc(100% + 50px);\r\n        transform: translateX(-25px);\r\n    }\r\n`;\r\n\r\nexport default class StartPages extends Component {\r\n    render() {\r\n        return (\r\n            <StartPagesDiv>\r\n                <h1>\"The Game of Thrones\" app</h1>\r\n                <hr/>\r\n                <h4>You can visit links:</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <Link to='/characters/'>List of characters</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <Link to='/houses/'>List of houses</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between\">\r\n                        <Link to='/books/'>List of books</Link>\r\n                    </li>\r\n                </ul>\r\n            </StartPagesDiv>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst UnknownPageDiv = styled.div`\r\n    color: #000;\r\n    background-color: #fff;\r\n    padding: 25px 25px;\r\n    border-radius: 5px;\r\n    max-width: 540px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    h3 {\r\n        margin-bottom: 25px;\r\n    }\r\n\r\n`;\r\n\r\nexport default class UnknownPage extends Component {\r\n    render() {\r\n        return (\r\n            <UnknownPageDiv>\r\n                <h3>This page does not exist</h3>\r\n                <hr />\r\n                <Link to=\"/\">&#10229; Back to top</Link>\r\n            </UnknownPageDiv>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport {CharacterPage, BooksPage, HousesPage, BooksItem, StartPages, UnknownPage} from '../pages';\nimport ErrorMessage from '../errorMessage';\nimport GotService from '../../services/gotService';\n\nimport styled from 'styled-components';\n\nconst AppDiv = styled.div`\n    background: rgb(62,126,164) url('img/got.jpg') center top/cover no-repeat;\n    background-size: cover;\n    height: 1000px;\n    a {\n        color: inherit;\n        text-decoration: none;\n    }\n    a:visited {\n        text-decoration: none;\n        color: inherit;\n    }\n    a:hover {\n        text-decoration: none;\n        color: inherit;\n    }\n    a:focus {\n        text-decoration: none;\n        color: inherit;\n    }\n    a:active {\n        text-decoration: none;\n        color: inherit;\n    }\n    .active {\n        display: none;\n    }\n`;\n\nconst Button = styled.button`\n    width: 250px;\n    height: 45px;\n    background-color: #000;\n    border-radius: 5px;\n    font-family: 'Roboto';\n    border: 1px solid #fff;\n    margin-bottom: 40px;\n    color: #fff;\n`;\n\nexport default class App extends Component {\n    gotService = new GotService();\n\n    state = {\n        showRandomChar: true,\n        error: false\n    }\n    onToggleClass = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    }\n    componentDidCatch() {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        const {showRandomChar, error} = this.state;\n        if (error ) {\n            return <ErrorMessage />\n        }\n        const randomChar = showRandomChar ? <RandomChar /> : null;\n        return (\n            <Router>\n                <AppDiv>\n                    <Container>\n                        <Header />\n                    </Container>\n                    <Container>\n                        <Row>\n                            <Col lg={{size: 5, offset: 0}}>\n                                {randomChar}\n                            <Button\n                                onClick={this.onToggleClass}\n                            >\n                                Toggle random character\n                            </Button>\n                            </Col>\n                        </Row>\n\n                        <Switch>\n                            <Route path='/' exact component={StartPages}/>\n                            <Route path='/characters' exact component={CharacterPage}/>\n                            <Route path='/houses' exact component={HousesPage}/>\n                            <Route path='/books' exact component={BooksPage}/>\n                            <Route path='/books/:id' render={\n                                ({match, history, location}) => {\n                                        const {id} = match.params;\n                                        return <BooksItem bookId={id}/>\n                                    }\n                            }/>\n                            <Route path='/*' component={UnknownPage}/>\n                        </Switch>\n                    </Container>\n                </AppDiv>\n            </Router>\n        )\n    }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}